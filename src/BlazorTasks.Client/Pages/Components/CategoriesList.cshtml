@if (Data != null)
{
	<div class="card categories-card">
		<div class="card-body">
			<h5 class="card-title mb-4">Categories</h5>
			@foreach (var category in Data)
			{
				<div class="category-bagde" style="border-color: @category.Color;">
					<a onclick="@(() => FilterByCategory(category))" style="color: @category.Color;">@category.Name</a> 
					<a onclick="@(() => EditCategory(category))" class="settings-cog oi oi-pencil ml-1"></a>
				</div>
				@*<span class="category-bagde badge badge-info pl-4" style="background-color:@category.Color;">
					<a href="#">@category.Name</a> 
					<a onclick="@(() => EditCategory(category))" class="settings-cog oi oi-pencil ml-1"></a>
				</span>*@
			}
			<NewCategoryModal OnCategoryCreate=@OnCategoryCreate/>
		</div>
	</div>

	<EditCategoryModal Category=@CategoryInEdit CloseModal=@CloseModal SaveCategory=@SaveCategory OnRemoveCategory=@RemoveCategory/>
}

@*if (Data != null)
{
	<h1>Categories</h1>
	<div class="mb-3 mt-3">
		@foreach (var category in Data)
		{
			<span class="category-bagde badge badge-info pl-4" style="background-color:@category.Color;"><a href="#">@category.Name</a> <a onclick="@(() => EditCategory(category))" class="settings-cog oi oi-pencil ml-1"></a></span>
		}
		<div>New Category</div>
		<NewCategoryModal OnCategoryCreate=@OnCategoryCreate/>
	</div>

	<EditCategoryModal Category=@CategoryInEdit CloseModal=@CloseModal SaveCategory=@SaveCategory OnRemoveCategory=@RemoveCategory/>
}*@

@functions
{
    [Parameter]
	IList<Category> Data { get; set; }

	[Parameter] 
	Func<CategoryForm, Task<ApiError>> OnCategoryCreate { get; set; }

	[Parameter]
	Func<Category, Task<ApiError>> OnCategoryUpdate { get; set; }

	[Parameter]
	Func<Category, Task> FilterByCategory { get; set; }

	[Parameter]
	Func<Category, Task> OnRemoveCategory { get; set; }

	Category CategoryInEdit { get; set; }

	void EditCategory(Category category)
    {
        CategoryInEdit = category;
		StateHasChanged();
    }

	bool CloseModal()
    {
        CategoryInEdit = null;
		StateHasChanged();
		return true;
    }

	async Task<ApiError> SaveCategory()
	{
		var result = await OnCategoryUpdate(CategoryInEdit);
		if (result == null)
		{
			CategoryInEdit = null;
			StateHasChanged();
		}
		return result;
	}

	async Task RemoveCategory()
	{
		await OnRemoveCategory(CategoryInEdit);
		CategoryInEdit = null;
		StateHasChanged();
	}
}